{b}RFTools Manual

Table of contents:
{l:general}General Tips
{l:netmon}RF Network Monitor Item
{l:base}Base Ingredients
{l:logic}Logic Gates
{l:monitor}Contents Monitors
{l:stomon}Storage Scanner
{l:filter}Item Filter
{l:crafte}Automatic Crafter
{/}



{l:prelay}RF Power Relay
{l:telepo}Teleporting System
{l:power}Power Generator
{l:shield}Shield System
{l:screens}Modular Screens
{l:envctrl}Environmental Control
{l:dimlet}Dimension Builder
{-------------------------------------------------------------}
{b}General Tips
{n:general}
All blocks in this mod (with a few exceptions like the Endergenic
Generator and blocks for which orientation doesn't matter) can
be rotated by using a wrench on them.

All blocks in this mod can be picked up by using a wrench while
sneaking. Most settings (like stored energy, possible inventory,
recipes and so on) will be remembered and restored when the block
is put back in the world.
{-------------------------------------------------------------}
{b}RF Network Monitor Item
{n:netmon}
{ri:networkMonitorItem}
With the RF Network Monitor you can select a block and it will try
to find all blocks that use or produce RF which are connected
(directly or inderectly) to the selected block. It will also show
you how much RF is in each of the blocks and the coordinate. You
can use this item to help debug RF related network problems.
{-------------------------------------------------------------}
Doubleclick on a line in the list of blocks will close the window and
the block will be hilighted for 5 seconds (configurable).

You can toggle the display between RF/tick or RF and you can also
filter the output.
{-------------------------------------------------------------}
{b}Base Ingredients
{n:base}
{rb:machineFrame}
The machine frame is the base ingredient for most machines in this mod.
{rb:machineBase}
The machine base is the base ingredient for a few other machines.
{-------------------------------------------------------------}
{b}Logic Gates
{n:logic}

{l:sequencer}Sequencer
{l:timer}Timer
{l:counter}Counter
{l:endermon}Ender Monitor
{l:redtrans}Redstone Transmitter
{l:redrec}Redstone Receiver
{-------------------------------------------------------------} 
{b}Sequencer
{n:sequencer}
{rb:sequencerBlock}
The sequencer is an advanced redstone based sequencer. It is
capable of giving out a series of 64 different signals. You can
edit the pattern of these signals in the gui of this block.

The modes of this block are explained in the next page. You can
also set the speed at which the cycles are played. Default is 1
which means that the cycle will proceed every tick.
{-------------------------------------------------------------} 
It has six different modes:

    Once1: cycle once when pulse arrives. Ignore further pulses
    Once2: cycle once when pulse arrives. Restart on pulse
    Loop1: loop continuously, ignore redstone signal
    Loop2: loop continuously, restart on pulse
    Loop3: loop continuously while redstone signal is on
    Step: step through the cycle one by one
{-------------------------------------------------------------}
{b}Timer
{n:timer}
{rb:timerBlock}
The timer is a simple gate that will repeatedly send a redstone pulse.
You can input any value for the delay so it can be used for very long
timeouts.

What is special about this timer is that it restart when it itself
receives a redstone pulse at its input. So given timely input pulses
this block will never output a pulse itself. By using this feature this
block can be used as a way to detect that a certain activity is overdue.
{-------------------------------------------------------------}
{b}Counter
{n:counter}
{rb:counterBlock}
The counter is a simple block that will count redstone pulses and
emit a redstone signal when it reaches a certain amount. Then it
starts over. You can see in the GUI how many redstone pulses it
already got.
{-------------------------------------------------------------}
{b}Ender Monitor
{n:endermon}
{rb:enderMonitorBlock}
The Ender Monitor only works in combination with the Endergenic
Generator. It will send a pulse based on three different conditions:

    Lost Pearl: send a redstone pulse when a pearl is lost
    Pearl Fired: send a pulse when a pearl is fired
    Pearl Arrived: send a pulse when a pearl arrives

Note that the redstone signal outputs on the red dot side and this
has to face away from the Endergenic Generator.
{-------------------------------------------------------------}
{b}Redstone Transmitter
{n:redtrans}
{rb:redstoneTransmitterBlock}
This block will wirelessly send out a redstone signal on a
specific channel when it gets a redstone signal. Use this in
combination with the redstone receiver block.
{-------------------------------------------------------------}
{b}Redstone Receiver
{n:redrec}
{rb:redstoneReceiverBlock}
This block will receive a redstone signal from a linked
redstone transmitter. To link this receiver with a transmitter
right-select the transmitter (or another linked receiver) with
this block.
{-------------------------------------------------------------}
{b}RF Monitor
{n:monitor}
{rb:rfMonitorBlock}
The RF Monitor is a block that you place in the world and that
can examine a nearby (3x3x3 area around the monitor) block and
gives a visual indication of how much RF is left in that block.
This block can also give out redstone signals in case the RF in
the monitored block is too low or too high. You can use this
redstone signal with the Power Relay (see below) to control
parts of your RF network.
{-------------------------------------------------------------} 
{b}Liquid Monitor
{rb:liquidMonitorBlock}
The Liquid Monitor is a block that works like the RF Monitor except
that it can examine the contents of a nearby liquid tank.
{-------------------------------------------------------------}
{b}Storage Scanner
{n:stomon}
{rb:storageScannerBlock}
The Storage Scanner is a block that can scan the surrounding
area for inventories (chests, furnaces, other devices, basically
anything that can hold items) and show them in a list. You can
then select an inventory in that list and it will display the
contents of that inventory. Scanning the environment uses energy
and can take a while if you select a big radius. It also uses
RF to perform this scan.
{-------------------------------------------------------------} 
If you open the user interface of this scanner you get two lists.
The top list is initially empty but will be filled when you press
the 'Scan' button. It contains all the inventories (chests, furnaces
and so on) that it could find in the selected area. If you
previously scanned an area you don't have to do it again. If a line
shows 'REMOVED' that means the specific block was removed after
the scan.

If you select an inventory in the top list then the bottom list will
show the contents of that inventory.

Doubleclick on an inventory in the top list will close this
window and hilight it in the world for 5 seconds (by default).
{-------------------------------------------------------------} 
You can search for items in all inventories that it scanned. It will
mark all the inventories where it found an item that matches what
you typed with a yellow color. This gives you an easy way to find
out where you put that diamond pickaxe again.

The slider next to the 'Scan' button allows you to select the radius
that this machine will use to scan the area. A value of '4' means
that an area of 9x9x9 will be scanned. Note that this operation can
take a while.
{-------------------------------------------------------------} 
{b}Automatic Crafter
{n:crafte}
{rb:crafterBlock1}
The Crafter is a powerful automatic crafting machine that can handle
up to eight different recipes in a single block. It can be used to
craft multiple items independent from each other or else it can be
used for more complicated multi-step crafting recipes. By default it
uses 100 RF for every crafting cycle (where it does all crafting
operations in one step).
{-------------------------------------------------------------} 
The list at the top-left allows you to select all the supported
recipes. If you select a recipe you can edit it in the right grid
by dragging over the right items.

The crafter also has an internal inventory and four output slots
for crafting results.
{-------------------------------------------------------------} 
The 'Keep/All' button is only active when a recipe is selected and
allows you to control if this recipe will always keep at least a single
item in the internal inventory.

The 'Int/Ext' button is also only active when a recipe is selected
and allows you to control where the result of the crafting operation
of this recipe goes too. With 'Ext' (default) the result is put in
an output slot where it can be extracted by an external pipe.
With 'Int' the result goes in the internal inventory where it
can be used by other recipes in this crafter.

The crafter also has a redstone mode (button below which can be set
to 'ignore', 'off', or 'on') and it also has a speed mode which is set
to slow by default. Fast mode uses more energy.
{-------------------------------------------------------------} 
{b}RF Power Relay
{n:prelay}
{rb:relayBlock}
The Power Relay allows you to control how much RF to output based on a
redstone signal. In its GUI you can set the amount of RF/tick to give
in case redstone signal is off and also in case redstone signal is on.
Typically you would use 0 in case the redstone signal is off and some
other value in case the redstone signal is on. You can use this in
combination with the RF Monitor to turn off a portion of your RF network
in case power is low. For example, to turn off ore processing machines.
{-------------------------------------------------------------} 
{b}Teleporting System
{n:telepo}
RFTools supports a teleportation system that uses RF to do the
transfer of matter. A teleporter is essentially one-directional and
consists of a transmitter and a receiver. So you need a pair for
two-way teleportation. To connect a transmitter and a receiver you
will also need a dialing device.

Energy cost of teleportation depends on the distance traveled. Also
travelling to another dimension is a lot more expensive.

If you're an admin and want to troubleshoot the portal network
you can use the Teleport Probe item (has no recipe). You can use
this item to check for problems with all receivers in the world.
Doubleclick on an item in the list will teleport you without using RF.
{-------------------------------------------------------------} 
{b}Teleportation Blocks

{l:tptransmitter}Matter Transmitter
{l:tpreceiver}Matter Receiver
{l:tpdialer}Dialing Device
{l:tpdestcheck}Destination Analyzer
{l:tpbooster}Matter Booster
{l:tpaccess}Access Control
{l:porter}Charged Porter Item
{-------------------------------------------------------------} 
{b}Matter Transmitter
{n:tptransmitter}
{rb:matterTransmitterBlock}
The matter transmitter is placed on the ground and (when dialed to a
valid destination) will teleport a player that is standing on it. There
is a fixed energy cost which is consumed immediatelly when the player
stands on it. Then during the duration of the teleport (witch varies
depending on the traveled distance) power is also consumed. If there
is not sufficient power during the first power usage then teleportation
will simply not start. But if there is a power failure during transit
then potentially very bad things can happen to the player.
{-------------------------------------------------------------} 
{b}Matter Receiver
{n:tpreceiver}
{rb:matterReceiverBlock}
The matter receiver is also placed on the ground. Players that teleport
to a receiver will appear on top of this block. Note that a receiver needs
energy. If the receiver doesn't have enough energy then teleportation will
go on but bad things will happen as soon as the player arrives at this
destination. So be careful!

If you give the matter receiver a name (using the GUI) then that name will
be shown in the dialing device which makes it easier to recognize.
{-------------------------------------------------------------} 
{b}Dialing Device
{n:tpdialer}
{rb:dialingDeviceBlock}
The dialing device is an important block which is needed to connect
nearby matter transmitters to receivers anywhere in the world. It shows
a list of all transmitters in the vicinity (by default an area of 21x11x21).
It also shows a list of all receivers in the world. Note that a dialed
transmitter will consume a little bit of energy while it is holding its
connection.

The 'Check' button is disabled by default unless you have a destination
analyzer connected to this machine (see below).
{-------------------------------------------------------------} 
{b}Destination Analyzer
{n:tpdestcheck}
{rb:destinationAnalyzerBlock}
This is a passive block that you can place next to a dialing device. It
enables the dialing device to check the status of a receiver or destination
dimension. This way you can be sure that a receiver and/or dimension has
enough power or is not blocked before attempting to make a connection.

You can also place a destination analyzer next to a transmitter. In
that case the transmitter will show a red colored teleportation beam
if there is something wrong on the receiving end. You can check the
actual problem in the dialing device.
{-------------------------------------------------------------}
{b}Matter Booster
{n:tpbooster}
{rb:matterBoosterBlock}
This is another passive block that you can place next to a matter
transmitter. If this block is present it gives the transmitter the
capability to teleport the user to an unpowered receiver. This does
use more energy so if not enough energy is available in the transmitter
this will not work. Note that this block does not avoid all
negative effects. You will still get hurt slightly and you end
up rather confused. But it is still way better then dieing.
{-------------------------------------------------------------}
{b}Access Control
{n:tpaccess}
Both the transmitter and the receiver can be set in public mode (default)
or private. In case the mode is private you have to insert a list of
players who can access this transmitter or receiver.

In case of a transmitter an unauthorized player will not be able to dial
to a receiver or to interrupt a dial and he/she will also not be able
to step through the teleporter.

In case of a receiver an unauthorized player can not dial to that
receiver but he/she can teleport to it if there is an authorized
transmitter already dialed to that receiver.
{-------------------------------------------------------------} 
{b}Charged Porter
{n:porter}
The Charged Porter is an item that you set to some target (a matter
receiver) and charge up. Right clicking the item will teleport you to
the preset receiver. Note that this requires 50% more RF then you would
normally use with a matter transmitter. Also note that the receiver
still needs power! Sneak-right click on a receiver to set target.
To craft this use:

{ri:chargedPorterItem}
{-------------------------------------------------------------}
{b}Power Generator
{n:power}

Scientists working in The End have discovered an interesting property
of ender pearls. When a pearl is thrown in some controlled manner the
mystic properties that occur on arrival can be harnessed and converted
to RF. If done at exactly the right moment this can produce a lot of
power. A pearl thrown this way is called an 'Endergenic Pearl'.

In addition it appears that pearls 'remember' that they have been
captured this way. If a pearl is captured and then thrown again as soon
as possible its internal power capacity increases which can give big
benefits for producing RF from this. However, this means that the pearl
has to be fired again as soon as possible, as trying to restrain a pearl
from firing is very costly on energy.
{-------------------------------------------------------------}
Note that even in optimal conditions it is possible that pearls are
lost. So a way has to be found to ensure that the system stays operational
at all times.

{b}Power Blocks

{l:powendergenic}Endergenic Generator
{l:powinjector}Pearl Injector
{-------------------------------------------------------------}
{b}Endergenic Generator
{n:powendergenic}
{rb:endergenicBlock}

The Endergenic Generator is the main block in the power generator system.
This device can capture endergenic pearls and fire them again. It has three
basic modes which are controlled by giving redstone pulses to this device:

    Idle: this is the default mode. It just waits
    Charging: in this mode the device can receive endergenic pearls
    Holding: in this mode the device is holding a pearl
{-------------------------------------------------------------}
Charging mode is a 15-tick cycle. The most optimal time to capture a pearl
is at tick 10 (starting with tick 1). RF will also be generated if an
endergenic pearl arrives at any other point in the charging cycle but the
RF that can be generated will be a lot less.

When the charging cycle ends without a pearl being received then
the machine will go into idle mode again.

If a pearl is received then charging mode immediatelly ends and the machine
goes into holding mode. In this mode it will consume RF every tick. Be
careful holding the pearl for too long as you will then end up consuming
more RF then you gained. If the internal storage of the generator does not
have enough RF to hold the pearl then it will automatically be lost. Also
each tick there is a small chance that the pearl will be lost in any case.
{-------------------------------------------------------------}
You can use a BuildCraft or Thermal Expansion compatible wrench to control
the destination of each generator. If you don't set a destination then pearls
will be automatically lost as soon as they are fired.

When selecting a generator with a wrench (right click) it will turn red
and then you can go to the destination generator (right click it again) to
set the destination. Pay attention to the message you get when you do this
as it tells you the distance (in ticks) between the two generators. This can
help you to time the rest of the system exactly right. Note that the maximum
distance is set to 4 ticks so keep that in mind.
{-------------------------------------------------------------}
This mechanic of charging, holding and firing endergenic pearls at specific
times implies precise timing and cooperation of multiple Endergenic
Generators. You will need at least two generators to be able to produce
power although it will probably be hard to get optimal RF production using
only two generators.

If you have plenty of ender pearls and don't care too much about less then
optimal generation you can just throw in as many pearls as you want from
one generator and capture them in another. Then it that other generator
you just fire them away immediatelly without caring about a destination.
You will quickly consume lots of ender pearls this way so this might not
be the best way to proceed.
{-------------------------------------------------------------}
{b}Pearl Injector
{n:powinjector}
{rb:pearlInjectorBlock}

This block has to be placed facing an Endergenic Generator or else
directly below it. This machine provides the only way to inject an ender
pearl into the power system. When it receives a redstone signal it will
convert the ender pearl to an endergenic pearl and immediatelly insert it
into the adjacent Endergenic Generator. If that generator was already
holding a pearl then nothing happens and the new pearl is lost.
{-------------------------------------------------------------}
Otherwise the endergenic pearl is immediatelly fired from the
generator and the system starts.

This injector has an internal buffer that can only store ender pearls.
{-------------------------------------------------------------}
{b}Shield System
{n:shield}

RFTools implements a 'simple' shield system that can filter mobs, animals,
players, and items. You start by building the shape of your yield with
connected Shield Template Blocks. Then you put a Shield Block next
to one of these templates and you give it power.

By default there is a maximum of 256 blocks in a single shield.
A tier 2 shield can go up to 1024 blocks.

To compose the shield you then need to right click the shield block with
a wrench. The shield block will compose the shield in the specified shape.
Wrenching the shield block again will turn the shield back into
the template blocks. By doing that you can change the shape of your shield
in case you're not happy with it.
{-------------------------------------------------------------}
To craft the Shield Template Blocks you use the following recipe:
{rb:shieldTemplateBlock}

To craft the Shield Block you use the following recipe:
{rb:shieldBlock}
{-------------------------------------------------------------}
The shield has three visualization options:

    Invisible: the shield is totally invisible
    Shield: a transparent generic shield texture is used
    Solid: the shield takes the appearance of a given block
        (insert that block in the gui of the Shield Block)

In the gui you can also insert rules for different types of
entities. For every rule you have the following actions:

    Pass: entity can pass through
    Solid: entity is blocked
    Damage: entity gets damage
    SolDmg: entity is blocked and gets damage
{-------------------------------------------------------------}
You can also set the type of damage. By default the damage
will be 'generic' but you can also set it to 'player'. This
will consume more energy but you will get XP orbs as well
as loot that you normally only get when a mob is killed
by the player.
{-------------------------------------------------------------}
{b}Item Filter
{n:filter}
{rb:itemFilterBlock}
The Item Filter allows controlled input/output from any side of the
block. It has nine storage slots that can be configured to only hold
a specific type of item. For each of these storage slots you can
control from which side it can receive items and to which side
other machines can extract items.
{-------------------------------------------------------------}
{b}Modular Screens
{n:screens}

If you want to display various things in your base then the
modular screen system in RFTools might be ideal for you. In
these screens you can insert up to 11 modules which can give
you various bits of information like energy in a machine,
the amount of fluids in a tank, the time of the day, simple text,
the amount of RF left in a dimension and so on. More modules
are planned for the future.

There are large and transparent screens variations of the
screen. You can get those by using a wrench on the screen.
{-------------------------------------------------------------}
Screens are not directly powered but get power from a Screen
Controller that you can craft as follows:
{rb:screenControllerBlock}

In the GUI of this block you can press 'Scan'. This will locate
all screens in a 65x33x65 area around the controller (or 129x33x129
for a maximum infused controller). From that point on these
screens will receive power from this controller.
{-------------------------------------------------------------}
You can craft a screen as follows:
{rb:screenBlock}

A screen with no modules is just black. So to make things interesting you
should add one or more module.

Note that even with modules a screen will be black if it is
not getting power. Make sure you have a screen controller
nearby and press 'Scan' on that so that it finds all screens.
{-------------------------------------------------------------}
The following screen modules are currently supported:
    - Text: simple line of text
    - Clock: a digital clock showing the time of the day
    - Energy: monitor the RF energy level of a machine
    - Dimension: monitor the RF energy level of a dimension
    - Fluid: monitor the amount of fluids in a tank
    - Inventory: monitor up to 4 slots in an inventory
    - Counter: show the current value of a counter gate
    - Redstone: show yes/no text depending on wireless redstone
{-------------------------------------------------------------}
Some modules (like energy, fluid, inventory, and counter modules)
require that you first shift-right click on the machine/tank that
you want to monitor. After that insert them in the screen. The
maximum distance between the screen and the monitored block is 64.
The 'Plus' versions of the modules have no limits.
{-------------------------------------------------------------}
{b}Environmental Controller
{n:envctrl}
{rb:environmentalControllerBlock}

Using the environmental controller you can improve the area
around it in various ways. There are modules to give you saturation,
regeneration, and so on. Every module requires power so this doesn't
come free. A single controller can affect an cylindrical area
with a maximum radius of 100 from bottom to top of the world
(if you're prepared to consume that much power).
{-------------------------------------------------------------}
{b}Dimension Builder
{n:dimlet}

The dimension builder is explained in another book. You can
craft the dimension builder manual as follows:

{ri:rfToolsManualDimensionItem}
{-------------------------------------------------------------}
